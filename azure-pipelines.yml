# trigger:
#   branches:
#     include:
#       - sit/sit

# stages:
#   - stage: AndroidStage
#     pool:
#       vmImage: 'windows-latest'
#     dependsOn: []
#     displayName: Android
#     jobs:
#       - job: AndroidJob
#         displayName: Android
#         steps:
#           - task: DownloadSecureFile@1
#             name: keyprop
#             displayName: Download key properties file
#             inputs:
#               secureFile: 'key.properties'
#           - task: JavaToolInstaller@0
#             name: java
#             inputs:
#               versionSpec: '17'
#               jdkArchitectureOption: 'x64'
#               jdkSourceOption: 'PreInstalled'
#           - task: DownloadSecureFile@1
#             name: key
#             displayName: Download signing key
#             inputs:
#               secureFile: 'key.jks'
#           - task: CopyFiles@2
#             inputs:
#              sourceFolder: "$(Agent.TempDirectory)"
#              Contents: 'key.properties'
#              TargetFolder: '$(Build.SourcesDirectory)/android/'
#           - task: CopyFiles@2
#             inputs:
#              sourceFolder: "$(Agent.TempDirectory)"
#              Contents: "key.jks"
#              TargetFolder: '$(Build.SourcesDirectory)/android/app/'
#           - task: FlutterInstall@0
#             displayName: "Install Flutter SDK"
#             inputs:
#               mode: 'custom'
#               channel: 'stable'
#               version: 'custom'
#               customVersion: '3.13.2'
#               customUrl: 'https://storage.googleapis.com/flutter_infra_release/releases/stable/windows/flutter_windows_3.13.2-stable.zip'

#           - task: FlutterBuild@0
#             displayName: "Build application"
#             inputs:
#               target: 'apk'
#               projectDirectory: '$(Build.SourcesDirectory)'
#               buildName: '1.0.0'
#               buildNumber: '65'
#           # - task: CopyFiles@2
#           #   inputs:
#           #     Contents: '**/*.apk'
#           #     TargetFolder: '$(Build.ArtifactStagingDirectory)'
#           # - task: PublishBuildArtifacts@1
#           #   inputs:
#           #     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#           #     ArtifactName: 'drop'
#           - task: Bash@3
#             displayName: "Upload to firebase app distribution"
#             inputs:
#               targetType: "inline"
#               script: |
#                 npm i -g firebase-tools
#                 ls -la D:\a\1\s\build\app\outputs\apk\release\app-release.apk
#                 firebase appdistribution:distribute "D:\a\1\s\build\app\outputs\apk\release\app-release.apk" \
#                   --app "1:423110846908:android:fe73ca02b83c314d7663b9" \
#                   --release-notes "From Azure Devops" \
#                   --groups "fh-level-2-testers-technical" \
#                   --token "$(firebaseToken)"

#   - stage: iOSStage
#     pool:
#       vmImage: 'macos-latest'
#     dependsOn: [ ]
#     displayName: iOS
#     jobs:

#       - job: iOSJob
#         displayName: iOS
#         steps:

#           # replace "iosKey" and "yourPwd" with your secure file name and password

#           - task: InstallAppleCertificate@2
#             displayName: Install certificate
#             inputs:
#               certSecureFile: 'Distribution_Investnation_11_oct.p12'
#               certPwd: 'abc123'

#           - task: InstallAppleProvisioningProfile@1
#             displayName: Install Dhabi_Dev_App_Store_Eiz
#             inputs:
#               provProfileSecureFile: 'Investnation_Dist_App_Store_Eiz.mobileprovision'

#           - task: FlutterInstall@0
#             displayName: "Install Flutter SDK"
#             inputs:
#               mode: 'auto'
#               channel: 'stable'
#               version: 'latest'

#           - script: |
#               flutter pub get
#               cd $(Build.SourcesDirectory)/ios
#               pod install
#             displayName: 'Install CocoaPods'

#           - task: Xcode@5
#             condition: true
#             inputs:
#               actions: 'archive'
#               sdk: 'iphoneos'
#               scheme: 'Runner'
#               exportOptions: 'plist'
#               exportOptionsPlist: 'ios/exportOptions.plist'
#               configuration: 'Release'
#               archivePath: 'build/ios/Runner.xcarchive'
#               exportPath: 'build/ios'
#               packageApp: true
#               teamId: 'C2D7LHRZ6X'
#               xcWorkspacePath: '**/Runner.xcworkspace'
#               signingOption: 'nosign'
#               # signingIdentity: '$(APPLE_CERTIFICATE_SIGNING_IDENTITY)'
#               # provisioningProfileUuid: '$(APPLE_PROV_PROFILE_UUID)'

#           # - task: CopyFiles@2
#           #   condition: true
#           #   displayName: 'CopyFiles'
#           #   inputs:
#           #     sourceFolder: '$(Agent.BuildDirectory)'
#           #     contents: '**/*.ipa'
#           #     targetFolder: '$(Build.ArtifactStagingDirectory)'
#           #     flattenFolders: true

#           # - task: PublishBuildArtifacts@1
#           #   condition: true
#           #   displayName: 'PublishBuildArtifacts'
#           #   inputs:
#           #     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#           #     ArtifactName: 'drop'
#           - task: AppStoreRelease@1
#             inputs:
#               authType: 'ApiKey'
#               apiKeyId: '$(apiKeyId)'
#               apiKeyIssuerId: '$(apiKeyIssuerId)'
#               apitoken: '$(apitoken)'
#               releaseTrack: 'TestFlight'
#               appIdentifier: 'com.fhc.InvestNation'
#               appType: 'iOS'
#               shouldSkipWaitingForProcessing: true
#               shouldSkipSubmission: true
#               appSpecificId: '6465605280'
#               ipaPath: "/Users/runner/work/1/s/build/ios/InvestNation.ipa"
